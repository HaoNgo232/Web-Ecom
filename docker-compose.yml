version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecom_db
      POSTGRES_USER: ecom_user
      POSTGRES_PASSWORD: ecom_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - ecom-network

  # Backend NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecom-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ecom_user
      DATABASE_PASSWORD: ecom_password
      DATABASE_NAME: ecom_db

      # App
      NODE_ENV: production
      PORT: 3000

      # JWT (thay đổi secret trong production thực tế)
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRATION_TIME: 1h
      JWT_REFRESH_EXPIRATION_TIME: 7d

      # Mail (cấu hình mail service nếu cần)
      MAIL_HOST: smtp.gmail.com
      SMTP_USERNAME: your-email@gmail.com
      SMTP_PASSWORD: your-app-password
    depends_on:
      - postgres
    networks:
      - ecom-network
    volumes:
      - ./backend/uploads:/app/uploads # Mount uploads directory

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecom-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ecom-network

# Volumes
volumes:
  postgres_data:
    driver: local

# Networks
networks:
  ecom-network:
    driver: bridge
