{
    "name": "@web-ecom/shared-types",
    "version": "1.0.0",
    "description": "Shared types and DTOs for Web Ecom application",
    "type": "module",
    "main": "./dist/cjs/index.cjs",
    "module": "./dist/esm/index.js",
    "types": "./dist/esm/index.d.ts",
    "exports": {
        ".": {
            "import": {
                "types": "./dist/esm/index.d.ts",
                "default": "./dist/esm/index.js"
            },
            "require": {
                "types": "./dist/cjs/index.d.cts",
                "default": "./dist/cjs/index.cjs"
            }
        },
        "./*": {
            "import": {
                "types": "./dist/esm/*.d.ts",
                "default": "./dist/esm/*.js"
            },
            "require": {
                "types": "./dist/cjs/*.d.cts",
                "default": "./dist/cjs/*.cjs"
            }
        },
        "./package.json": "./package.json"
    },
    "scripts": {
        "build": "pnpm run build:safe",
        "build:safe": "pnpm run clean && pnpm run build:esm && pnpm run build:cjs && pnpm run postprocess:cjs",
        "build:esm": "tsc -p tsconfig.esm.json",
        "build:cjs": "tsc -p tsconfig.cjs.json",
        "postprocess:cjs": "pnpm run rename:cjs && pnpm run fix-imports",
        "rename:cjs": "find ./dist/cjs -depth -name '*.js' -exec bash -c 'mv \"$1\" \"${1%.js}.cjs\"' _ {} \\; && find ./dist/cjs -depth -name '*.js.map' -exec bash -c 'mv \"$1\" \"${1%.js.map}.cjs.map\"' _ {} \\; && find ./dist/cjs -depth -name '*.d.ts' -exec bash -c 'mv \"$1\" \"${1%.d.ts}.d.cts\"' _ {} \\; && find ./dist/cjs -depth -name '*.d.ts.map' -exec bash -c 'mv \"$1\" \"${1%.d.ts.map}.d.cts.map\"' _ {} \\;",
        "fix-imports": "node fix-cjs-imports.cjs",
        "build:dev": "tsc --watch",
        "dev": "tsc --watch",
        "lint": "eslint src/**/*.ts",
        "type-check": "tsc --noEmit",
        "prepublishOnly": "pnpm run build",
        "clean": "rm -rf dist",
        "verify": "pnpm run type-check && pnpm run build && echo ' Shared-types verification passed!'",
        "watch": "concurrently \"tsc -p tsconfig.esm.json --watch\" \"tsc -p tsconfig.cjs.json --watch\"",
        "check:exports": "node -e \"console.log('ðŸ“¦ Checking exports...'); const pkg = require('./package.json'); console.log(' Exports config:', Object.keys(pkg.exports));\""
    },
    "files": [
        "dist",
        "src"
    ],
    "devDependencies": {
        "typescript": "^5.7.3",
        "class-validator": "^0.14.2",
        "class-transformer": "^0.5.1",
        "zod": "^3.22.4"
    },
    "peerDependencies": {
        "class-validator": "^0.14.2",
        "class-transformer": "^0.5.1",
        "zod": "^3.22.4"
    }
}